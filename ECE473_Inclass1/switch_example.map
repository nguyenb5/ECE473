Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                              switch_example.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
                              switch_example.o (__ashldi3)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              switch_example.o (__itoa_ncheck)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

lcd_string_array    0x20              hd44780.o
i                   0x1               switch_example.o
lcd_str             0x10              switch_example.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
LOAD switch_example.o
LOAD hd44780.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libatmega128.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                0x0000000000800100                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800100
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xcb6
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000098                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000a8        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b0        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000b0                __vector_22
                0x00000000000000b0                __vector_28
                0x00000000000000b0                __vector_1
                0x00000000000000b0                __vector_32
                0x00000000000000b0                __vector_34
                0x00000000000000b0                __vector_24
                0x00000000000000b0                __vector_12
                0x00000000000000b0                __bad_interrupt
                0x00000000000000b0                __vector_6
                0x00000000000000b0                __vector_31
                0x00000000000000b0                __vector_3
                0x00000000000000b0                __vector_23
                0x00000000000000b0                __vector_30
                0x00000000000000b0                __vector_25
                0x00000000000000b0                __vector_11
                0x00000000000000b0                __vector_13
                0x00000000000000b0                __vector_17
                0x00000000000000b0                __vector_19
                0x00000000000000b0                __vector_7
                0x00000000000000b0                __vector_27
                0x00000000000000b0                __vector_5
                0x00000000000000b0                __vector_33
                0x00000000000000b0                __vector_4
                0x00000000000000b0                __vector_9
                0x00000000000000b0                __vector_2
                0x00000000000000b0                __vector_21
                0x00000000000000b0                __vector_29
                0x00000000000000b0                __vector_8
                0x00000000000000b0                __vector_26
                0x00000000000000b0                __vector_14
                0x00000000000000b0                __vector_10
                0x00000000000000b0                __vector_16
                0x00000000000000b0                __vector_18
                0x00000000000000b0                __vector_20
 .text          0x00000000000000b4       0xbe switch_example.o
                0x00000000000000b4                spi_init
                0x00000000000000c4                __vector_15
 .text          0x0000000000000172      0x976 hd44780.o
                0x0000000000000172                send_lcd
                0x000000000000019c                refresh_lcd
                0x0000000000000262                set_custom_character
                0x00000000000002ce                set_cursor
                0x00000000000002fa                uint2lcd
                0x00000000000003ce                int2lcd
                0x0000000000000406                cursor_on
                0x000000000000042a                cursor_off
                0x000000000000044e                shift_right
                0x0000000000000472                shift_left
                0x0000000000000496                strobe_lcd
                0x00000000000004a8                clear_display
                0x00000000000004d8                cursor_home
                0x0000000000000508                line2_col1
                0x000000000000052c                line1_col1
                0x0000000000000550                fill_spaces
                0x0000000000000584                char2lcd
                0x00000000000005a8                string2lcd
                0x0000000000000602                lcd_init
                0x0000000000000786                lcd_int32
                0x0000000000000932                lcd_int16
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000000ae8        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000ae8                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000ae8       0x5c switch_example.o
                0x0000000000000ae8                main
 .text.libgcc.mul
                0x0000000000000b44        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000b44       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000b44                __divmodhi4
                0x0000000000000b44                _div
 .text.libgcc   0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000b6c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000b6c       0x2e /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
                0x0000000000000b6c                __divmodsi4
 .text.libgcc   0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000b9a        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000b9a       0x10 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
                0x0000000000000b9a                __negsi2
 .text.libgcc   0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.div
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc   0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.prologue
                0x0000000000000baa        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.builtins
                0x0000000000000baa       0x32 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
                0x0000000000000baa                __ashldi3
 .text.libgcc.fmul
                0x0000000000000bdc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.fixed
                0x0000000000000bdc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .text.libgcc.mul
                0x0000000000000bdc        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000bdc       0x28 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000bdc                __udivmodhi4
 .text.libgcc   0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000c04        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000c04       0x44 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000c04                __udivmodsi4
 .text.libgcc   0x0000000000000c48        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000c48        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000c48        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000c48        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000c48        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x0000000000000c48       0x16 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x0000000000000c48                __itoa_ncheck
 .text.avr-libc
                0x0000000000000c5e       0x34 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x0000000000000c5e                __utoa_ncheck
                0x0000000000000c60                __utoa_common
 .text.avr-libc
                0x0000000000000c92       0x20 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000c92                strrev
                0x0000000000000cb2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000cb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x0000000000000cb2                exit
                0x0000000000000cb2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000cb2        0x4 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000cb6                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000cb6
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 switch_example.o
 .data          0x0000000000800100        0x0 hd44780.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100       0x3d
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800100        0xa switch_example.o
                0x0000000000800100                switch_count
 .bss           0x000000000080010a        0x2 hd44780.o
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_negsi2.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_ashldi3.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080010c       0x11 switch_example.o
                0x000000000080010c                i
                0x000000000080010d                lcd_str
 COMMON         0x000000000080011d       0x20 hd44780.o
                0x000000000080011d                lcd_string_array
                0x000000000080013d                PROVIDE (__bss_end, .)
                0x0000000000000cb6                __data_load_start = LOADADDR (.data)
                0x0000000000000cb6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080013d        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080013d                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1ff8
 *(.stab)
 .stab          0x0000000000000000      0x75c switch_example.o
 .stab          0x000000000000075c     0x189c hd44780.o
                                       0x1ad0 (size before relaxing)

.stabstr        0x0000000000000000     0x11e3
 *(.stabstr)
 .stabstr       0x0000000000000000     0x11e3 switch_example.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 switch_example.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 hd44780.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x780
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x780 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_abbrev   0x0000000000000000      0x718
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x718 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x27d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x27d /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(switch_example.elf elf32-avr)
LOAD linker stubs
